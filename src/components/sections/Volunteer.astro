---
import Section from "../Section.astro"
import FormattedDate from "../FormattedDate.astro"
import { volunteer } from "@cv"
---

<Section className={Astro.props.className} title="Volunteering">
  <ul class="flex flex-col">
    {
      volunteer.map(
        ({
          organization,
          startDate,
          endDate,
          position,
          summary,
          url,
          location,
        }) => {
          return (
            <li class="relative print:py-2">
              <div class="group relative grid pb-1 print:pb-0 transition-all print:grid-cols-1 print:gap-1 sm:grid-cols-12 sm:gap-8 md:gap-6 lg:hover:!opacity-100 ">
                <header class="sticky top-10 mt-1 text-xs font-semibold sm:col-span-2">
                  <FormattedDate date={startDate} /> -
                  {endDate != null ? (
                    <FormattedDate date={endDate} />
                  ) : (
                    "Present"
                  )}
                </header>
                <div class="relative flex flex-col pb-6 print:pb-0 before:-ml-6 sm:col-span-10 before:w-px print:before:hidden before:absolute before:bg-skin-muted before:h-full before:mt-2">
                  <div class="absolute w-2 h-2 bg-skin-muted rounded-full mt-2 -translate-x-[1.71rem] ring print:hidden ring-skin-fill" />
                  <h3>
                    <div
                      class="inline-flex items-center text-lg print:text-base leading-tight group/link focus-visible:text-amber-500"
                      aria-label="{position} - {company}"
                    >
                      <span>
                        {position} <span>@</span>
                        {url ? (
                          <a
                            class="text-skin-hue"
                            href={url}
                            title={`Ver ${organization}`}
                            target="_blank"
                          >
                            {organization}
                          </a>
                        ) : (
                          <span>{name}</span>
                        )}
                        {url && (
                          <span class="inline-block text-skin-hue print:[&>svg]:hidden">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              viewBox="0 0 20 20"
                              fill="currentColor"
                              class="inline-block w-4 h-4 ml-1 transition-transform translate-y-px shrink-0 group-hover/link:-translate-y-1 group-hover/link:translate-x-1 group-focus-visible/link:-translate-y-1 group-focus-visible/link:translate-x-1 motion-reduce:transition-none"
                              aria-hidden="true"
                            >
                              <path
                                fill-rule="evenodd"
                                d="M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z"
                                clip-rule="evenodd"
                              />
                            </svg>
                          </span>
                        )}
                      </span>
                    </div>
                  </h3>
                  {location && (
                    <div class="text-xs text-skin-muted">{location}</div>
                  )}
                  <div
                    class="mt-4  print:gap-0 flex flex-col gap-4 print:text-xs text-m"
                    x-data="{ expanded: false }"
                  >
                    {summary && (
                      <div class="flex flex-col gap-1">
                        <h4>Summary:</h4>
                        <ul class="text-skin-muted [&>li]:ml-4 flex list-disc flex-col gap-2">
                          {Array.isArray(summary) ? (
                            summary.map((item) => ({ item }))
                          ) : (
                            <li>{summary}</li>
                          )}
                        </ul>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </li>
          )
        },
      )
    }
  </ul>
</Section>
<script
  defer
  src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js"
></script>
<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"
></script>

<style>
  li::marker {
    @apply text-skin-hue;
  }
</style>
